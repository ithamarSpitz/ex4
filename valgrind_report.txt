==11311== Memcheck, a memory error detector
==11311== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==11311== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==11311== Command: ./euler_circuit -v 5 -e 10 -s 42
==11311== 
Generated Graph:
2 0 2 1 1 
0 0 0 1 1 
2 0 2 0 0 
1 1 0 4 0 
1 1 0 0 0 
The graph has an Euler circuit.
Euler Circuit: 0 0 2 2 0 3 3 3 1 4 0 
==11311== 
==11311== Process terminating with default action of signal 27 (SIGPROF)
==11311==    at 0x4B6F71A: __open_nocancel (open64_nocancel.c:45)
==11311==    by 0x4B7D4FF: write_gmon (gmon.c:370)
==11311==    by 0x4B7DD5E: _mcleanup (gmon.c:444)
==11311==    by 0x4AA2FDD: __cxa_finalize (cxa_finalize.c:83)
==11311==    by 0x10A4E6: ??? (in /home/itamar/Desktop/ex4/euler_circuit)
==11311==    by 0x4011F6A: _dl_fini (dl-fini.c:138)
==11311==    by 0x4AA28A6: __run_exit_handlers (exit.c:108)
==11311==    by 0x4AA2A5F: exit (exit.c:139)
==11311==    by 0x4A80089: (below main) (libc-start.c:342)
==11311== 
==11311== HEAP SUMMARY:
==11311==     in use at exit: 39,538 bytes in 1 blocks
==11311==   total heap usage: 17 allocs, 16 frees, 117,278 bytes allocated
==11311== 
==11311== LEAK SUMMARY:
==11311==    definitely lost: 0 bytes in 0 blocks
==11311==    indirectly lost: 0 bytes in 0 blocks
==11311==      possibly lost: 0 bytes in 0 blocks
==11311==    still reachable: 39,538 bytes in 1 blocks
==11311==         suppressed: 0 bytes in 0 blocks
==11311== Reachable blocks (those to which a pointer was found) are not shown.
==11311== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==11311== 
==11311== For lists of detected and suppressed errors, rerun with: -s
==11311== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
